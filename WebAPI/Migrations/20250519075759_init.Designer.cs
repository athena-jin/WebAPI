// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    [Migration("20250519075759_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WebAPI.Data.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConnectorType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("627acde5-94af-49a5-9a96-e072e737e4ea"),
                            Address = "192.168.1.10",
                            ConnectorType = 0,
                            Name = "Machine A",
                            Port = 8080u,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("65484d17-708e-4794-93eb-9636932ab5c9"),
                            Address = "192.168.1.11",
                            ConnectorType = 0,
                            Name = "Machine B",
                            Port = 8081u,
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("9d3d94b2-e5cc-4b97-8253-0e455197611a"),
                            Address = "opc.tcp://localhost",
                            ConnectorType = 2,
                            Name = "Video One",
                            Port = 4840u,
                            Status = 0
                        });
                });

            modelBuilder.Entity("WebAPI.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5d62bfb-865f-4393-a601-103f9c522139"),
                            Name = "admin",
                            Password = "admin"
                        },
                        new
                        {
                            Id = new Guid("094c07d2-64d5-4bde-bc8a-14d688bee080"),
                            Name = "Default",
                            Password = "Default"
                        });
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("WarningLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("WarningRecords");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecordDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WarningLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("WarningRecordDetails");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecord", b =>
                {
                    b.HasOne("WebAPI.Data.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecordDetails", b =>
                {
                    b.HasOne("WebAPI.Data.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });
#pragma warning restore 612, 618
        }
    }
}
