// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(CustomDbContext))]
    [Migration("20250520083724_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("WebAPI.Data.Machine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ConnectorType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Port")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Machines");

                    b.HasData(
                        new
                        {
                            Id = new Guid("eee48de2-5afd-481d-9f4d-c5b9236f48f6"),
                            Address = "192.168.1.10",
                            ConnectorType = 0,
                            Name = "Machine A",
                            Port = 8080u,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("e78e2c10-1679-4de9-ac77-35eb9c127803"),
                            Address = "192.168.1.11",
                            ConnectorType = 0,
                            Name = "Machine B",
                            Port = 8081u,
                            Status = 2
                        },
                        new
                        {
                            Id = new Guid("7a5e700a-45b9-4320-80a4-48e0af766bfa"),
                            Address = "opc.tcp://localhost",
                            ConnectorType = 2,
                            Name = "Video One",
                            Port = 4840u,
                            Status = 0
                        });
                });

            modelBuilder.Entity("WebAPI.Data.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ddee17be-bbcd-4ded-8cf2-f2123c05770c"),
                            Name = "admin",
                            Password = "admin"
                        },
                        new
                        {
                            Id = new Guid("690545c7-f0a5-494c-94c5-9aa9c4dc2854"),
                            Name = "Default",
                            Password = "Default"
                        });
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Time")
                        .HasColumnType("TEXT");

                    b.Property<int>("WarningLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("WarningRecords");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecordDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MachineId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WarningLevel")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MachineId");

                    b.ToTable("WarningRecordDetails");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecord", b =>
                {
                    b.HasOne("WebAPI.Data.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("WebAPI.Data.WarningRecordDetails", b =>
                {
                    b.HasOne("WebAPI.Data.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });
#pragma warning restore 612, 618
        }
    }
}
